[project]
name = "contentgraph-mcp"
version = "0.1.0"
description = "MCP server for content management and quizzing"
authors = ["Your Name <your@email.com>"]
requires-python = ">=3.11"
dependencies = [
    "beautifulsoup4>=4.13.4",
    "chromadb>=1.0.15",
    "fastapi>=0.116.1",
    "instructor>=1.10.0",
    "mcp>=1.12.1",
    "openai>=1.97.1",
    "pydantic>=2.11.7",
    "python-dotenv>=1.1.1",
    "requests>=2.32.4",
    "sentence-transformers>=5.0.0",
]

[project.optional-dependencies]
test = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.10.0",
    "pytest-asyncio>=0.21.0",
    "httpx>=0.24.0",
]

[build-system]
requires = ["setuptools>=45", "wheel"]
build-backend = "setuptools.build_meta"

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--cov=src",
    "--cov-report=html",
    "--cov-report=term-missing",
    "--strict-markers",
    "-v"
]
markers = [
    "unit: Unit tests",
    "integration: Integration tests",
    "slow: Slow tests",
]

[tool.coverage.run]
source = ["src"]
omit = [
    "tests/*",
    "*/__pycache__/*",
    "*/migrations/*",
    "*/venv/*",
    "*/virtualenv/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
]
